<?xml version="1.0" encoding="UTF-8"?>

<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	metadata-complete="false">
	<context-param>
		<param-name>contextClass</param-name>
		<param-value>nl.hu.curcon.generic.PerHostXmlWebApplicationContext</param-value>
	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<filter>
		<filter-name>CORS</filter-name>
		<filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
		<init-param>
			<param-name>cors.allowOrigin</param-name>
			<param-value>*</param-value>
		</init-param>
		<init-param>
			<param-name>cors.supportedMethods</param-name>
			<param-value>GET, POST, HEAD, PUT, DELETE</param-value>
		</init-param>
		<init-param>
			<param-name>cors.supportedHeaders</param-name>
			<param-value>*</param-value>
		</init-param>
		<init-param>
			<param-name>cors.exposedHeaders</param-name>
			<param-value>Set-Cookie, Content-Location, Content-Length</param-value>
		</init-param>
<!-- 		<init-param> -->
<!-- 			<param-name>cors.supportsCredentials</param-name> -->
<!-- 			<param-value>true</param-value> -->
<!-- 		</init-param> -->
	</filter>
	<!-- <filter> -->
	<!-- <filter-name>ConnectionFilter</filter-name> -->
	<!-- <filter-class>nl.hu.curcon.filter.ConnectionFilter</filter-class> -->
	<!-- </filter> -->

	<filter-mapping>
		<filter-name>CORS</filter-name>
		<url-pattern>/rest/*</url-pattern>
	</filter-mapping>

	<!-- <filter-mapping> -->
	<!-- <filter-name>ConnectionFilter</filter-name> -->
	<!-- <url-pattern>/rest/*</url-pattern> -->
	<!-- </filter-mapping> -->

	<servlet>
		<servlet-name>Jersey Servlet</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
		<init-param>
			<param-name>javax.ws.rs.Application</param-name>
			<param-value>nl.hu.curcon.rest.MyApplication</param-value>
		</init-param>
		<init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>nl.hu.curcon.rest,nl.hu.curcon.filter,com.fasterxml.jackson.jaxrs.json</param-value>
		</init-param>
        <init-param>
            <param-name>jersey.config.server.provider.classnames</param-name>
            <param-value>
                io.swagger.jaxrs.listing.ApiListingResource,
                io.swagger.jaxrs.listing.SwaggerSerializers,
                nl.hu.curcon.rest.CursusRestService
            </param-value>
        </init-param>
        
        <init-param>     
        	<param-name>jersey.config.server.provider.classnames</param-name>     
        	<param-value>org.glassfish.jersey.server.filter.RolesAllowedDynamicFeature</param-value>   
       	</init-param>
        
		<init-param>
			<param-name>org.glassfish.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	

	<servlet>
        <servlet-name>SwaggerBootstrap</servlet-name>
        <servlet-class>io.swagger.api.util.Bootstrap</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>

	<servlet-mapping>
		<servlet-name>Jersey Servlet</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>

</web-app>

